openapi: 3.0.3
info:
  title: People Registry
  description: Register and retrieve people from registry
  contact:
    email: eml.abhishek@gmail.com
  version: 1.0.1
tags:
  - name: people registry
    description: Store and retrieve people
paths:
  /people:
    put:
      tags:
        - people
      summary: insert a new people in registry
      description: insert a new people in registry
      operationId: insertPeople
      requestBody:
        description: insert a new people in registry
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/People'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
  /people/{ssn}/addChild:
    patch:
      tags:
        - people
      summary: insert a new people in registry
      description: insert a new people in registry
      operationId: addChild
      parameters:
        - name: ssn
          in: path
          example: 123456-9876
          required: true
          schema:
            type: string
      requestBody:
        description: insert a new child
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Child'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Invalid ID supplied
        '404':
          description: Id not found
        '405':
          description: Validation exception
  /people/{ssn}:
    get:
      tags:
        - people
      summary: find a people by ssn
      description: search people by ssn
      operationId: getPeopleById
      parameters:
        - name: ssn
          in: path
          example: 123456-9876
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/People'
        '400':
          description: Invalid tag value
  /people/{ssn}/children/getOldestChildName:
    get:
      tags:
        - people
      summary: Find first child by ssn
      description: get oldest child name
      operationId: getOldestChildren
      parameters:
        - name: ssn
          in: path
          example: 123456-9876
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: string
                example: Tom
        '400':
          description: Invalid tag value
components:
  schemas:
    People:
      required:
        - ssn
        - name
      type: object
      properties:
        ssn:
          type: string
          example: 123456-9876
        name:
          type: string
          example: John Doe
        spouceName:
          type: string
          example: Jane Doe
        children:
          type: array
          items:
            $ref: '#/components/schemas/Child'
    Child:
      type: object
      required:
        - name
        - dob
      properties:
        name:
          type: string
          example: "Tom"
        dob:
          type: string
          format: full-date
          example: "1985-05-05"